---
# Source: sekolahlinux/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: service-a
  labels:
    name: service-a
    env: dev
    version: 0.1.0
    maintainer: sekolahlinux
    managed-by: Helm
    helm-chart: sekolahlinux-0.1.0
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    name: service-a-server
    env: dev
---
# Source: sekolahlinux/templates/deployment-server.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-a-server
  labels:
    name: service-a
    env: dev
    version: 0.1.0
    maintainer: sekolahlinux
    managed-by: Helm
    helm-chart: sekolahlinux-0.1.0
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  selector:
    matchLabels:
      name: service-a-server
      env: dev
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        name: service-a-server
        env: dev
        version: 0.1.0
        maintainer: sekolahlinux
        managed-by: Helm
        helm-chart: sekolahlinux-0.1.0
      annotations:
        prometheus.io/scrape: "false"
        sidecar.istio.io/inject: "false"
    spec:
      containers:
        - name: service-a-server
          image: "sekolahlinux/crawler:service-a-0c7d8e24"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 5
            periodSeconds: 10
            tcpSocket:
              port: http
          readinessProbe:
            initialDelaySeconds: 5
            periodSeconds: 10
            tcpSocket:
              port: http
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 100m
              memory: 100Mi
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          volumeMounts:
      volumes:
      restartPolicy: Always
      dnsPolicy: ClusterFirst
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: name
                  operator: In
                  values:
                  - service-a-server
              topologyKey: kubernetes.io/hostname
            weight: 100
---
# Source: sekolahlinux/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: service-a
  labels:
    name: service-a
    env: dev
    version: 0.1.0
    maintainer: sekolahlinux
    managed-by: Helm
    helm-chart: sekolahlinux-0.1.0
  annotations:
spec:
  ingressClassName: nginx
  rules:
    - host: "admin1.sekolahlinux.internal"
      http:
        paths:
          - path: /
            backend:
              service:
                name: service-a
                port: 
                  name: http
            pathType: ImplementationSpecific
---
# Source: sekolahlinux/templates/keda.yaml
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: service-a
  namespace: default
spec:
  cooldownPeriod: 10
  maxReplicaCount: 10
  minReplicaCount: 1
  pollingInterval: 10
  scaleTargetRef:
    name: service-a-server
  triggers:
  - metadata:
      activationThreshold: "1"
      query: |
        round(sum(irate(nginx_ingress_controller_requests{ingress="service-a"}[5m])))
      serverAddress: http://prometheus-server.default.svc:80
      threshold: "10"
    type: prometheus

